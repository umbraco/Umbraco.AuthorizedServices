// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { HandleData, HandleResponse, Handle1Data, Handle1Response, GenerateOauth1RequestTokenData, GenerateOauth1RequestTokenResponse, GetByAliasData, GetByAliasResponse, SendSampleRequestData, SendSampleRequestResponse, SaveApiKeyData, SaveApiKeyResponse, SaveOauth1TokenData, SaveOauth1TokenResponse, GenerateOauth1RequestToken1Data, GenerateOauth1RequestToken1Response, SaveOauth2TokenData, SaveOauth2TokenResponse, GenerateOauth2ClientCredentialsTokenData, GenerateOauth2ClientCredentialsTokenResponse, RevokeAccessData, RevokeAccessResponse } from './types.gen';

export class ServiceResponseService {
    /**
     * @param data The data for the request.
     * @param data.oauthToken
     * @param data.oauthVerifier
     * @returns unknown OK
     * @throws ApiError
     */
    public static handle(data: HandleData = {}): CancelablePromise<HandleResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/authorized-services/management/api/v1/service-response/oauth1',
            query: {
                oauth_token: data.oauthToken,
                oauth_verifier: data.oauthVerifier
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.code
     * @param data.state
     * @returns unknown OK
     * @throws ApiError
     */
    public static handle1(data: Handle1Data = {}): CancelablePromise<Handle1Response> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/authorized-services/management/api/v1/service-response/oauth2',
            query: {
                code: data.code,
                state: data.state
            }
        });
    }
    
}

export class ServiceService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static generateOauth1RequestToken(data: GenerateOauth1RequestTokenData = {}): CancelablePromise<GenerateOauth1RequestTokenResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/authorized-services/management/api/v1/service',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.alias
     * @returns unknown OK
     * @throws ApiError
     */
    public static getByAlias(data: GetByAliasData): CancelablePromise<GetByAliasResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/authorized-services/management/api/v1/service/{alias}',
            path: {
                alias: data.alias
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.alias
     * @returns string OK
     * @throws ApiError
     */
    public static sendSampleRequest(data: SendSampleRequestData): CancelablePromise<SendSampleRequestResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/authorized-services/management/api/v1/service/{alias}/sample-request',
            path: {
                alias: data.alias
            },
            errors: {
                500: 'Internal Server Error'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static saveApiKey(data: SaveApiKeyData = {}): CancelablePromise<SaveApiKeyResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/authorized-services/management/api/v1/service/api-key',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static saveOauth1Token(data: SaveOauth1TokenData = {}): CancelablePromise<SaveOauth1TokenResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/authorized-services/management/api/v1/service/oauth1',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static generateOauth1RequestToken1(data: GenerateOauth1RequestToken1Data = {}): CancelablePromise<GenerateOauth1RequestToken1Response> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/authorized-services/management/api/v1/service/oauth1/request-token',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static saveOauth2Token(data: SaveOauth2TokenData = {}): CancelablePromise<SaveOauth2TokenResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/authorized-services/management/api/v1/service/oauth2',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static generateOauth2ClientCredentialsToken(data: GenerateOauth2ClientCredentialsTokenData = {}): CancelablePromise<GenerateOauth2ClientCredentialsTokenResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/authorized-services/management/api/v1/service/oauth2/client-credentials',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static revokeAccess(data: RevokeAccessData = {}): CancelablePromise<RevokeAccessResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/authorized-services/management/api/v1/service/revoke',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications'
        });
    }
    
}