{"version":3,"file":"index-CRz22JwE.js","sources":["../../../Client/generated/core/ApiError.ts","../../../Client/generated/core/CancelablePromise.ts","../../../Client/generated/core/OpenAPI.ts","../../../Client/generated/core/request.ts","../../../Client/generated/services.gen.ts","../../../Client/src/entities.ts","../../../Client/src/workspace/manifests.ts","../../../Client/src/tree/tree.server.data-source.ts","../../../Client/src/tree/tree.store.ts","../../../Client/src/tree/tree.repository.ts","../../../Client/src/tree/menu-item/manifests.ts","../../../Client/src/tree/manifests.ts","../../../Client/src/index.ts"],"sourcesContent":["import type { ApiRequestOptions } from './ApiRequestOptions.js';\r\nimport type { ApiResult } from './ApiResult.js';\r\n\r\nexport class ApiError extends Error {\r\n\tpublic readonly url: string;\r\n\tpublic readonly status: number;\r\n\tpublic readonly statusText: string;\r\n\tpublic readonly body: unknown;\r\n\tpublic readonly request: ApiRequestOptions;\r\n\r\n\tconstructor(request: ApiRequestOptions, response: ApiResult, message: string) {\r\n\t\tsuper(message);\r\n\r\n\t\tthis.name = 'ApiError';\r\n\t\tthis.url = response.url;\r\n\t\tthis.status = response.status;\r\n\t\tthis.statusText = response.statusText;\r\n\t\tthis.body = response.body;\r\n\t\tthis.request = request;\r\n\t}\r\n}","export class CancelError extends Error {\r\n\tconstructor(message: string) {\r\n\t\tsuper(message);\r\n\t\tthis.name = 'CancelError';\r\n\t}\r\n\r\n\tpublic get isCancelled(): boolean {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport interface OnCancel {\r\n\treadonly isResolved: boolean;\r\n\treadonly isRejected: boolean;\r\n\treadonly isCancelled: boolean;\r\n\r\n\t(cancelHandler: () => void): void;\r\n}\r\n\r\nexport class CancelablePromise<T> implements Promise<T> {\r\n\tprivate _isResolved: boolean;\r\n\tprivate _isRejected: boolean;\r\n\tprivate _isCancelled: boolean;\r\n\treadonly cancelHandlers: (() => void)[];\r\n\treadonly promise: Promise<T>;\r\n\tprivate _resolve?: (value: T | PromiseLike<T>) => void;\r\n\tprivate _reject?: (reason?: unknown) => void;\r\n\r\n\tconstructor(\r\n\t\texecutor: (\r\n\t\t\tresolve: (value: T | PromiseLike<T>) => void,\r\n\t\t\treject: (reason?: unknown) => void,\r\n\t\t\tonCancel: OnCancel\r\n\t\t) => void\r\n\t) {\r\n\t\tthis._isResolved = false;\r\n\t\tthis._isRejected = false;\r\n\t\tthis._isCancelled = false;\r\n\t\tthis.cancelHandlers = [];\r\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\r\n\t\t\tthis._resolve = resolve;\r\n\t\t\tthis._reject = reject;\r\n\r\n\t\t\tconst onResolve = (value: T | PromiseLike<T>): void => {\r\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._isResolved = true;\r\n\t\t\t\tif (this._resolve) this._resolve(value);\r\n\t\t\t};\r\n\r\n\t\t\tconst onReject = (reason?: unknown): void => {\r\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._isRejected = true;\r\n\t\t\t\tif (this._reject) this._reject(reason);\r\n\t\t\t};\r\n\r\n\t\t\tconst onCancel = (cancelHandler: () => void): void => {\r\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.cancelHandlers.push(cancelHandler);\r\n\t\t\t};\r\n\r\n\t\t\tObject.defineProperty(onCancel, 'isResolved', {\r\n\t\t\t\tget: (): boolean => this._isResolved,\r\n\t\t\t});\r\n\r\n\t\t\tObject.defineProperty(onCancel, 'isRejected', {\r\n\t\t\t\tget: (): boolean => this._isRejected,\r\n\t\t\t});\r\n\r\n\t\t\tObject.defineProperty(onCancel, 'isCancelled', {\r\n\t\t\t\tget: (): boolean => this._isCancelled,\r\n\t\t\t});\r\n\r\n\t\t\treturn executor(onResolve, onReject, onCancel as OnCancel);\r\n\t\t});\r\n\t}\r\n\r\n\tget [Symbol.toStringTag]() {\r\n\t\treturn \"Cancellable Promise\";\r\n\t}\r\n\r\n\tpublic then<TResult1 = T, TResult2 = never>(\r\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\r\n\t\tonRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null\r\n\t): Promise<TResult1 | TResult2> {\r\n\t\treturn this.promise.then(onFulfilled, onRejected);\r\n\t}\r\n\r\n\tpublic catch<TResult = never>(\r\n\t\tonRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null\r\n\t): Promise<T | TResult> {\r\n\t\treturn this.promise.catch(onRejected);\r\n\t}\r\n\r\n\tpublic finally(onFinally?: (() => void) | null): Promise<T> {\r\n\t\treturn this.promise.finally(onFinally);\r\n\t}\r\n\r\n\tpublic cancel(): void {\r\n\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isCancelled = true;\r\n\t\tif (this.cancelHandlers.length) {\r\n\t\t\ttry {\r\n\t\t\t\tfor (const cancelHandler of this.cancelHandlers) {\r\n\t\t\t\t\tcancelHandler();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.warn('Cancellation threw an error', error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.cancelHandlers.length = 0;\r\n\t\tif (this._reject) this._reject(new CancelError('Request aborted'));\r\n\t}\r\n\r\n\tpublic get isCancelled(): boolean {\r\n\t\treturn this._isCancelled;\r\n\t}\r\n}","import type { ApiRequestOptions } from './ApiRequestOptions.js';\r\n\r\ntype Headers = Record<string, string>;\r\ntype Middleware<T> = (value: T) => T | Promise<T>;\r\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\r\n\r\nexport class Interceptors<T> {\r\n  _fns: Middleware<T>[];\r\n\r\n  constructor() {\r\n    this._fns = [];\r\n  }\r\n\r\n  eject(fn: Middleware<T>): void {\r\n    const index = this._fns.indexOf(fn);\r\n    if (index !== -1) {\r\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\r\n    }\r\n  }\r\n\r\n  use(fn: Middleware<T>): void {\r\n    this._fns = [...this._fns, fn];\r\n  }\r\n}\r\n\r\nexport type OpenAPIConfig = {\r\n\tBASE: string;\r\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\r\n\tENCODE_PATH?: ((path: string) => string) | undefined;\r\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\r\n\tPASSWORD?: string | Resolver<string> | undefined;\r\n\tTOKEN?: string | Resolver<string> | undefined;\r\n\tUSERNAME?: string | Resolver<string> | undefined;\r\n\tVERSION: string;\r\n\tWITH_CREDENTIALS: boolean;\r\n\tinterceptors: {\r\n\t\trequest: Interceptors<RequestInit>;\r\n\t\tresponse: Interceptors<Response>;\r\n\t};\r\n};\r\n\r\nexport const OpenAPI: OpenAPIConfig = {\r\n\tBASE: '',\r\n\tCREDENTIALS: 'include',\r\n\tENCODE_PATH: undefined,\r\n\tHEADERS: undefined,\r\n\tPASSWORD: undefined,\r\n\tTOKEN: undefined,\r\n\tUSERNAME: undefined,\r\n\tVERSION: 'Latest',\r\n\tWITH_CREDENTIALS: false,\r\n\tinterceptors: {\r\n\t\trequest: new Interceptors(),\r\n\t\tresponse: new Interceptors(),\r\n\t},\r\n};","import { ApiError } from './ApiError.js';\r\nimport type { ApiRequestOptions } from './ApiRequestOptions.js';\r\nimport type { ApiResult } from './ApiResult.js';\r\nimport { CancelablePromise ,type  OnCancel } from './CancelablePromise.js';\r\nimport type { OpenAPIConfig } from './OpenAPI.js';\r\n\r\nexport const isString = (value: unknown): value is string => {\r\n\treturn typeof value === 'string';\r\n};\r\n\r\nexport const isStringWithValue = (value: unknown): value is string => {\r\n\treturn isString(value) && value !== '';\r\n};\r\n\r\nexport const isBlob = (value: any): value is Blob => {\r\n\treturn value instanceof Blob;\r\n};\r\n\r\nexport const isFormData = (value: unknown): value is FormData => {\r\n\treturn value instanceof FormData;\r\n};\r\n\r\nexport const base64 = (str: string): string => {\r\n\ttry {\r\n\t\treturn btoa(str);\r\n\t} catch (err) {\r\n\t\t// @ts-ignore\r\n\t\treturn Buffer.from(str).toString('base64');\r\n\t}\r\n};\r\n\r\nexport const getQueryString = (params: Record<string, unknown>): string => {\r\n\tconst qs: string[] = [];\r\n\r\n\tconst append = (key: string, value: unknown) => {\r\n\t\tqs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\r\n\t};\r\n\r\n\tconst encodePair = (key: string, value: unknown) => {\r\n\t\tif (value === undefined || value === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tappend(key, value.toISOString());\r\n\t\t} else if (Array.isArray(value)) {\r\n\t\t\tvalue.forEach(v => encodePair(key, v));\r\n\t\t} else if (typeof value === 'object') {\r\n\t\t\tObject.entries(value).forEach(([k, v]) => encodePair(`${key}[${k}]`, v));\r\n\t\t} else {\r\n\t\t\tappend(key, value);\r\n\t\t}\r\n\t};\r\n\r\n\tObject.entries(params).forEach(([key, value]) => encodePair(key, value));\r\n\r\n\treturn qs.length ? `?${qs.join('&')}` : '';\r\n};\r\n\r\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\r\n\tconst encoder = config.ENCODE_PATH || encodeURI;\r\n\r\n\tconst path = options.url\r\n\t\t.replace('{api-version}', config.VERSION)\r\n\t\t.replace(/{(.*?)}/g, (substring: string, group: string) => {\r\n\t\t\tif (options.path?.hasOwnProperty(group)) {\r\n\t\t\t\treturn encoder(String(options.path[group]));\r\n\t\t\t}\r\n\t\t\treturn substring;\r\n\t\t});\r\n\r\n\tconst url = config.BASE + path;\r\n\treturn options.query ? url + getQueryString(options.query) : url;\r\n};\r\n\r\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\r\n\tif (options.formData) {\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst process = (key: string, value: unknown) => {\r\n\t\t\tif (isString(value) || isBlob(value)) {\r\n\t\t\t\tformData.append(key, value);\r\n\t\t\t} else {\r\n\t\t\t\tformData.append(key, JSON.stringify(value));\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tObject.entries(options.formData)\r\n\t\t\t.filter(([, value]) => value !== undefined && value !== null)\r\n\t\t\t.forEach(([key, value]) => {\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tvalue.forEach(v => process(key, v));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprocess(key, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\treturn formData;\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\r\n\r\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\r\n\tif (typeof resolver === 'function') {\r\n\t\treturn (resolver as Resolver<T>)(options);\r\n\t}\r\n\treturn resolver;\r\n};\r\n\r\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\r\n\tconst [token, username, password, additionalHeaders] = await Promise.all([\r\n\t\tresolve(options, config.TOKEN),\r\n\t\tresolve(options, config.USERNAME),\r\n\t\tresolve(options, config.PASSWORD),\r\n\t\tresolve(options, config.HEADERS),\r\n\t]);\r\n\r\n\tconst headers = Object.entries({\r\n\t\tAccept: 'application/json',\r\n\t\t...additionalHeaders,\r\n\t\t...options.headers,\r\n\t})\r\n\t\t.filter(([, value]) => value !== undefined && value !== null)\r\n\t\t.reduce((headers, [key, value]) => ({\r\n\t\t\t...headers,\r\n\t\t\t[key]: String(value),\r\n\t\t}), {} as Record<string, string>);\r\n\r\n\tif (isStringWithValue(token)) {\r\n\t\theaders['Authorization'] = `Bearer ${token}`;\r\n\t}\r\n\r\n\tif (isStringWithValue(username) && isStringWithValue(password)) {\r\n\t\tconst credentials = base64(`${username}:${password}`);\r\n\t\theaders['Authorization'] = `Basic ${credentials}`;\r\n\t}\r\n\r\n\tif (options.body !== undefined) {\r\n\t\tif (options.mediaType) {\r\n\t\t\theaders['Content-Type'] = options.mediaType;\r\n\t\t} else if (isBlob(options.body)) {\r\n\t\t\theaders['Content-Type'] = options.body.type || 'application/octet-stream';\r\n\t\t} else if (isString(options.body)) {\r\n\t\t\theaders['Content-Type'] = 'text/plain';\r\n\t\t} else if (!isFormData(options.body)) {\r\n\t\t\theaders['Content-Type'] = 'application/json';\r\n\t\t}\r\n\t}\r\n\r\n\treturn new Headers(headers);\r\n};\r\n\r\nexport const getRequestBody = (options: ApiRequestOptions): unknown => {\r\n\tif (options.body !== undefined) {\r\n\t\tif (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {\r\n\t\t\treturn JSON.stringify(options.body);\r\n\t\t} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\r\n\t\t\treturn options.body;\r\n\t\t} else {\r\n\t\t\treturn JSON.stringify(options.body);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const sendRequest = async (\r\n\tconfig: OpenAPIConfig,\r\n\toptions: ApiRequestOptions,\r\n\turl: string,\r\n\tbody: any,\r\n\tformData: FormData | undefined,\r\n\theaders: Headers,\r\n\tonCancel: OnCancel\r\n): Promise<Response> => {\r\n\tconst controller = new AbortController();\r\n\r\n\tlet request: RequestInit = {\r\n\t\theaders,\r\n\t\tbody: body ?? formData,\r\n\t\tmethod: options.method,\r\n\t\tsignal: controller.signal,\r\n\t};\r\n\r\n\tif (config.WITH_CREDENTIALS) {\r\n\t\trequest.credentials = config.CREDENTIALS;\r\n\t}\r\n\r\n\tfor (const fn of config.interceptors.request._fns) {\r\n\t\trequest = await fn(request);\r\n\t}\r\n\r\n\tonCancel(() => controller.abort());\r\n\r\n\treturn await fetch(url, request);\r\n};\r\n\r\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\r\n\tif (responseHeader) {\r\n\t\tconst content = response.headers.get(responseHeader);\r\n\t\tif (isString(content)) {\r\n\t\t\treturn content;\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const getResponseBody = async (response: Response): Promise<unknown> => {\r\n\tif (response.status !== 204) {\r\n\t\ttry {\r\n\t\t\tconst contentType = response.headers.get('Content-Type');\r\n\t\t\tif (contentType) {\r\n\t\t\t\tconst binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];\r\n\t\t\t\tif (contentType.includes('application/json') || contentType.includes('+json')) {\r\n\t\t\t\t\treturn await response.json();\r\n\t\t\t\t} else if (binaryTypes.some(type => contentType.includes(type))) {\r\n\t\t\t\t\treturn await response.blob();\r\n\t\t\t\t} else if (contentType.includes('multipart/form-data')) {\r\n\t\t\t\t\treturn await response.formData();\r\n\t\t\t\t} else if (contentType.includes('text/')) {\r\n\t\t\t\t\treturn await response.text();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\r\n\tconst errors: Record<number, string> = {\r\n\t\t400: 'Bad Request',\r\n\t\t401: 'Unauthorized',\r\n\t\t402: 'Payment Required',\r\n\t\t403: 'Forbidden',\r\n\t\t404: 'Not Found',\r\n\t\t405: 'Method Not Allowed',\r\n\t\t406: 'Not Acceptable',\r\n\t\t407: 'Proxy Authentication Required',\r\n\t\t408: 'Request Timeout',\r\n\t\t409: 'Conflict',\r\n\t\t410: 'Gone',\r\n\t\t411: 'Length Required',\r\n\t\t412: 'Precondition Failed',\r\n\t\t413: 'Payload Too Large',\r\n\t\t414: 'URI Too Long',\r\n\t\t415: 'Unsupported Media Type',\r\n\t\t416: 'Range Not Satisfiable',\r\n\t\t417: 'Expectation Failed',\r\n\t\t418: 'Im a teapot',\r\n\t\t421: 'Misdirected Request',\r\n\t\t422: 'Unprocessable Content',\r\n\t\t423: 'Locked',\r\n\t\t424: 'Failed Dependency',\r\n\t\t425: 'Too Early',\r\n\t\t426: 'Upgrade Required',\r\n\t\t428: 'Precondition Required',\r\n\t\t429: 'Too Many Requests',\r\n\t\t431: 'Request Header Fields Too Large',\r\n\t\t451: 'Unavailable For Legal Reasons',\r\n\t\t500: 'Internal Server Error',\r\n\t\t501: 'Not Implemented',\r\n\t\t502: 'Bad Gateway',\r\n\t\t503: 'Service Unavailable',\r\n\t\t504: 'Gateway Timeout',\r\n\t\t505: 'HTTP Version Not Supported',\r\n\t\t506: 'Variant Also Negotiates',\r\n\t\t507: 'Insufficient Storage',\r\n\t\t508: 'Loop Detected',\r\n\t\t510: 'Not Extended',\r\n\t\t511: 'Network Authentication Required',\r\n\t\t...options.errors,\r\n\t}\r\n\r\n\tconst error = errors[result.status];\r\n\tif (error) {\r\n\t\tthrow new ApiError(options, result, error);\r\n\t}\r\n\r\n\tif (!result.ok) {\r\n\t\tconst errorStatus = result.status ?? 'unknown';\r\n\t\tconst errorStatusText = result.statusText ?? 'unknown';\r\n\t\tconst errorBody = (() => {\r\n\t\t\ttry {\r\n\t\t\t\treturn JSON.stringify(result.body, null, 2);\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\tthrow new ApiError(options, result,\r\n\t\t\t`Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * Request method\r\n * @param config The OpenAPI configuration object\r\n * @param options The request options from the service\r\n * @returns CancelablePromise<T>\r\n * @throws ApiError\r\n */\r\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\r\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\r\n\t\ttry {\r\n\t\t\tconst url = getUrl(config, options);\r\n\t\t\tconst formData = getFormData(options);\r\n\t\t\tconst body = getRequestBody(options);\r\n\t\t\tconst headers = await getHeaders(config, options);\r\n\r\n\t\t\tif (!onCancel.isCancelled) {\r\n\t\t\t\tlet response = await sendRequest(config, options, url, body, formData, headers, onCancel);\r\n\r\n\t\t\t\tfor (const fn of config.interceptors.response._fns) {\r\n\t\t\t\t\tresponse = await fn(response);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst responseBody = await getResponseBody(response);\r\n\t\t\t\tconst responseHeader = getResponseHeader(response, options.responseHeader);\r\n\r\n\t\t\t\tconst result: ApiResult = {\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tok: response.ok,\r\n\t\t\t\t\tstatus: response.status,\r\n\t\t\t\t\tstatusText: response.statusText,\r\n\t\t\t\t\tbody: responseHeader ?? responseBody,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcatchErrorCodes(options, result);\r\n\r\n\t\t\t\tresolve(result.body);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\treject(error);\r\n\t\t}\r\n\t});\r\n};","// This file is auto-generated by @hey-api/openapi-ts\r\n\r\nimport type { CancelablePromise } from './core/CancelablePromise.js';\r\nimport { OpenAPI } from './core/OpenAPI.js';\r\nimport { request as __request } from './core/request.js';\r\nimport type { GenerateOauth1RequestTokenData, GenerateOauth1RequestTokenResponse, GetByAliasData, GetByAliasResponse, SendSampleRequestData, SendSampleRequestResponse, SaveApiKeyData, SaveApiKeyResponse, SaveOauth1TokenData, SaveOauth1TokenResponse, GenerateOauth1RequestToken1Data, GenerateOauth1RequestToken1Response, SaveOauth2TokenData, SaveOauth2TokenResponse, GenerateOauth2ClientCredentialsTokenData, GenerateOauth2ClientCredentialsTokenResponse, RevokeAccessData, RevokeAccessResponse, RootData, RootResponse } from './types.gen.js';\r\n\r\nexport class ServiceService {\r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.requestBody\r\n     * @returns string OK\r\n     * @throws ApiError\r\n     */\r\n    public static generateOauth1RequestToken(data: GenerateOauth1RequestTokenData = {}): CancelablePromise<GenerateOauth1RequestTokenResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'POST',\r\n            url: '/umbraco/authorized-services/management/api/v1/service',\r\n            body: data.requestBody,\r\n            mediaType: 'application/json'\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.alias\r\n     * @returns unknown OK\r\n     * @throws ApiError\r\n     */\r\n    public static getByAlias(data: GetByAliasData): CancelablePromise<GetByAliasResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'GET',\r\n            url: '/umbraco/authorized-services/management/api/v1/service/{alias}',\r\n            path: {\r\n                alias: data.alias\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.alias\r\n     * @returns string OK\r\n     * @throws ApiError\r\n     */\r\n    public static sendSampleRequest(data: SendSampleRequestData): CancelablePromise<SendSampleRequestResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'GET',\r\n            url: '/umbraco/authorized-services/management/api/v1/service/{alias}/sample-request',\r\n            path: {\r\n                alias: data.alias\r\n            },\r\n            errors: {\r\n                500: 'Internal Server Error'\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.requestBody\r\n     * @returns string OK\r\n     * @throws ApiError\r\n     */\r\n    public static saveApiKey(data: SaveApiKeyData = {}): CancelablePromise<SaveApiKeyResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'POST',\r\n            url: '/umbraco/authorized-services/management/api/v1/service/api-key',\r\n            body: data.requestBody,\r\n            mediaType: 'application/json',\r\n            responseHeader: 'Umb-Notifications'\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.requestBody\r\n     * @returns string OK\r\n     * @throws ApiError\r\n     */\r\n    public static saveOauth1Token(data: SaveOauth1TokenData = {}): CancelablePromise<SaveOauth1TokenResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'POST',\r\n            url: '/umbraco/authorized-services/management/api/v1/service/oauth1',\r\n            body: data.requestBody,\r\n            mediaType: 'application/json',\r\n            responseHeader: 'Umb-Notifications'\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.requestBody\r\n     * @returns string OK\r\n     * @throws ApiError\r\n     */\r\n    public static generateOauth1RequestToken1(data: GenerateOauth1RequestToken1Data = {}): CancelablePromise<GenerateOauth1RequestToken1Response> {\r\n        return __request(OpenAPI, {\r\n            method: 'POST',\r\n            url: '/umbraco/authorized-services/management/api/v1/service/oauth1/request-token',\r\n            body: data.requestBody,\r\n            mediaType: 'application/json'\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.requestBody\r\n     * @returns string OK\r\n     * @throws ApiError\r\n     */\r\n    public static saveOauth2Token(data: SaveOauth2TokenData = {}): CancelablePromise<SaveOauth2TokenResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'POST',\r\n            url: '/umbraco/authorized-services/management/api/v1/service/oauth2',\r\n            body: data.requestBody,\r\n            mediaType: 'application/json',\r\n            responseHeader: 'Umb-Notifications'\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.requestBody\r\n     * @returns unknown OK\r\n     * @throws ApiError\r\n     */\r\n    public static generateOauth2ClientCredentialsToken(data: GenerateOauth2ClientCredentialsTokenData = {}): CancelablePromise<GenerateOauth2ClientCredentialsTokenResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'POST',\r\n            url: '/umbraco/authorized-services/management/api/v1/service/oauth2/client-credentials',\r\n            body: data.requestBody,\r\n            mediaType: 'application/json'\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.requestBody\r\n     * @returns string OK\r\n     * @throws ApiError\r\n     */\r\n    public static revokeAccess(data: RevokeAccessData = {}): CancelablePromise<RevokeAccessResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'POST',\r\n            url: '/umbraco/authorized-services/management/api/v1/service/revoke',\r\n            body: data.requestBody,\r\n            mediaType: 'application/json',\r\n            responseHeader: 'Umb-Notifications'\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport class TreeService {\r\n    /**\r\n     * @param data The data for the request.\r\n     * @param data.skip\r\n     * @param data.take\r\n     * @returns unknown OK\r\n     * @throws ApiError\r\n     */\r\n    public static root(data: RootData = {}): CancelablePromise<RootResponse> {\r\n        return __request(OpenAPI, {\r\n            method: 'GET',\r\n            url: '/umbraco/authorized-services/management/api/v1/tree',\r\n            query: {\r\n                skip: data.skip,\r\n                take: data.take\r\n            }\r\n        });\r\n    }\r\n    \r\n}","export const AUTHORIZED_SERVICE_ENTITY_TYPE = \"authorized-service\";\r\nexport const AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE = \"authorized-service-root\";\r\n\r\nexport const AUTHORIZED_SERVICES_MENU_ALIAS = \"AuthorizedServices.Menu.Services\";\r\n\r\nexport type AuthorizedServiceEntityType = typeof AUTHORIZED_SERVICE_ENTITY_TYPE;\r\nexport type AuthorizedServiceRootEntityType = typeof AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE;\r\n","import { type ManifestWorkspaces } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { AUTHORIZED_SERVICE_ENTITY_TYPE } from \"@umbraco-authorizedservices/entities\";\r\n\r\nexport const WORKSPACE_ALIAS = \"AuthorizedServices.Workspace\";\r\nconst workspaceManifest: ManifestWorkspaces = {\r\n  type: \"workspace\",\r\n  kind: 'routable',\r\n  alias: WORKSPACE_ALIAS,\r\n  name: \"Authorized Service Workspace\",\r\n  api: () => import(\"./workspace.context.js\"),\r\n  meta: {\r\n    entityType: AUTHORIZED_SERVICE_ENTITY_TYPE\r\n  }\r\n};\r\n\r\nexport const manifest = workspaceManifest;\r\n","import type { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport {\r\n  UmbTreeServerDataSourceBase,\r\n  type UmbTreeChildrenOfRequestArgs,\r\n} from \"@umbraco-cms/backoffice/tree\";\r\nimport {\r\n  type AuthorizedServiceTreeItemResponseModel,\r\n  TreeService,\r\n} from \"@umbraco-authorizedservices/generated\";\r\nimport {\r\n  AUTHORIZED_SERVICE_ENTITY_TYPE,\r\n  AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE,\r\n} from \"@umbraco-authorizedservices/entities\";\r\nimport type { AuthorizedServicesTreeItemModel } from \"./types.js\";\r\n\r\nexport class AuthorizedServicesTreeServerDataSource extends UmbTreeServerDataSourceBase<\r\n  any,\r\n  AuthorizedServicesTreeItemModel\r\n> {\r\n  constructor(host: UmbControllerHost) {\r\n    super(host, {\r\n      getRootItems,\r\n      getChildrenOf,\r\n      getAncestorsOf,\r\n      mapper,\r\n    });\r\n  }\r\n}\r\n\r\nconst getRootItems = () =>\r\n  TreeService.root();\r\n\r\nconst getChildrenOf = (args: UmbTreeChildrenOfRequestArgs) => {\r\n  if (args.parent.unique === null) {\r\n    return getRootItems();\r\n  }\r\n  throw new Error(\"Not supported for the authorized services tree\");\r\n};\r\n\r\nconst getAncestorsOf = () => {\r\n  throw new Error(\"Not supported for the authorized services tree\");\r\n};\r\n\r\nconst mapper = (\r\n  item: AuthorizedServiceTreeItemResponseModel\r\n): AuthorizedServicesTreeItemModel => {\r\n  return { ...item, ...{\r\n    parent: {\r\n      unique: null,\r\n      entityType: AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE,\r\n    },\r\n    entityType: AUTHORIZED_SERVICE_ENTITY_TYPE,\r\n    isFolder: false,\r\n    hasChildren: false,\r\n  }};\r\n};\r\n","import { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport type { UmbControllerHostElement } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbUniqueTreeStore } from \"@umbraco-cms/backoffice/tree\";\r\n\r\nexport class AuthorizedServicesTreeStore extends UmbUniqueTreeStore {\r\n  constructor(host: UmbControllerHostElement) {\r\n    super(host, AUTHORIZED_SERVICES_TREE_STORE_CONTEXT.toString());\r\n  }\r\n}\r\n\r\nexport const AUTHORIZED_SERVICES_TREE_STORE_CONTEXT =\r\n  new UmbContextToken<AuthorizedServicesTreeStore>(\r\n    \"AuthorizedServicesTreeStore\"\r\n  );\r\n","import type { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport type { UmbApi } from \"@umbraco-cms/backoffice/extension-api\";\r\nimport { UmbTreeRepositoryBase } from \"@umbraco-cms/backoffice/tree\";\r\nimport { AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE } from \"@umbraco-authorizedservices/entities\";\r\nimport type {\r\n  AuthorizedServicesTreeItemModel,\r\n  AuthorizedServicesTreeRootModel,\r\n} from \"./types.js\";\r\nimport { AuthorizedServicesTreeServerDataSource } from \"./tree.server.data-source.js\";\r\nimport { AUTHORIZED_SERVICES_TREE_STORE_CONTEXT } from \"./tree.store.js\";\r\n\r\nexport class AuthorizedServicesTreeRepository\r\n  extends UmbTreeRepositoryBase<\r\n    AuthorizedServicesTreeItemModel,\r\n    AuthorizedServicesTreeRootModel\r\n  >\r\n  implements UmbApi\r\n{\r\n  constructor(host: UmbControllerHost) {\r\n    super(\r\n      host,\r\n      AuthorizedServicesTreeServerDataSource,\r\n      AUTHORIZED_SERVICES_TREE_STORE_CONTEXT\r\n    );\r\n  }\r\n\r\n  async requestTreeRoot() {\r\n    const data: AuthorizedServicesTreeRootModel = {\r\n      unique: null,\r\n      entityType: AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE,\r\n      name: \"Authorized Services\",\r\n      hasChildren: true,\r\n      isFolder: true,\r\n    };\r\n\r\n    return { data };\r\n  }\r\n}\r\n","import type { ManifestMenuItemTreeKind } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst menuItem: ManifestMenuItemTreeKind = {\r\n  type: \"menuItem\",\r\n  kind: \"tree\",\r\n  alias: \"AuthorizedServices.MenuItem.Service\",\r\n  name: \"Authorized Services Service Menu Item\",\r\n  weight: 1,\r\n  meta: {\r\n    label: \"Authorized Services\",\r\n    treeAlias: \"AuthorizedServices.Tree.Services\",\r\n    menus: ['Umb.Menu.AdvancedSettings'],\r\n  },\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","import type {\r\n  ManifestRepository,\r\n  ManifestTree,\r\n  ManifestTreeItem,\r\n  ManifestTreeStore,\r\n} from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport {\r\n  AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE,\r\n  AUTHORIZED_SERVICE_ENTITY_TYPE,\r\n} from \"@umbraco-authorizedservices/entities\";\r\nimport { AuthorizedServicesTreeRepository } from \"./tree.repository.js\";\r\nimport { AuthorizedServicesTreeStore } from \"./tree.store.js\";\r\nimport { manifests as menuManifests } from \"./menu-item/manifests.js\";\r\n\r\nexport const AUTHORIZED_SERVICES_TREE_REPOSITORY_ALIAS =\r\n  \"AuthorizedServices.Repository.Services.Tree\";\r\nexport const AUTHORIZED_SERVICES_TREE_STORE_ALIAS =\r\n  \"AuthorizedServices.Store.Services.Tree\";\r\nexport const AUTHORIZED_SERVICES_TREE_ALIAS =\r\n  \"AuthorizedServices.Tree.Services\";\r\n\r\nconst treeRepository: ManifestRepository = {\r\n  type: \"repository\",\r\n  alias: AUTHORIZED_SERVICES_TREE_REPOSITORY_ALIAS,\r\n  name: \"Authorized Services Tree Repository\",\r\n  api: AuthorizedServicesTreeRepository,\r\n};\r\n\r\nconst treeStore: ManifestTreeStore = {\r\n  type: \"treeStore\",\r\n  alias: AUTHORIZED_SERVICES_TREE_STORE_ALIAS,\r\n  name: \"Authorized Services  Tree Store\",\r\n  api: AuthorizedServicesTreeStore,\r\n};\r\n\r\nconst tree: ManifestTree = {\r\n  type: \"tree\",\r\n  kind: \"default\",\r\n  alias: AUTHORIZED_SERVICES_TREE_ALIAS,\r\n  name: \"Authorized Services Tree\",\r\n  meta: {\r\n    repositoryAlias: AUTHORIZED_SERVICES_TREE_REPOSITORY_ALIAS,\r\n  },\r\n};\r\n\r\nconst treeItem: ManifestTreeItem = {\r\n  type: \"treeItem\",\r\n  kind: \"default\",\r\n  alias: \"AuthorizedServices.TreeItem.Service\",\r\n  name: \"Authorized Services Tree Item\",\r\n  forEntityTypes: [\r\n    AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE,\r\n    AUTHORIZED_SERVICE_ENTITY_TYPE,\r\n  ],\r\n};\r\n\r\nexport const manifests = [\r\n  treeRepository,\r\n  treeStore,\r\n  tree,\r\n  treeItem,\r\n  ...menuManifests,\r\n];\r\n","import type { UmbEntryPointOnInit } from \"@umbraco-cms/backoffice/extension-api\";\r\nimport { UMB_AUTH_CONTEXT } from \"@umbraco-cms/backoffice/auth\";\r\nimport { OpenAPI } from \"../generated/index.js\";\r\nimport { manifest as workspaceManifest } from \"./workspace/manifests.js\";\r\nimport { manifests as treeManifests } from \"./tree/manifests.js\";\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n  extensionRegistry.registerMany([workspaceManifest, ...treeManifests]);\r\n\r\n  _host.consumeContext(UMB_AUTH_CONTEXT, async (auth) => {\r\n    if (!auth) return;\r\n\r\n    const umbOpenApi = auth.getOpenApiConfiguration();\r\n    OpenAPI.BASE = umbOpenApi.base;\r\n    OpenAPI.TOKEN = umbOpenApi.token;\r\n    OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n    OpenAPI.CREDENTIALS = umbOpenApi.credentials;\r\n  });\r\n};\r\n"],"names":["ApiError","request","response","message","CancelError","CancelablePromise","executor","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","Interceptors","fn","index","OpenAPI","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","encodePair","v","k","getUrl","config","options","encoder","path","substring","group","_a","url","getFormData","formData","process","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","_b","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","binaryTypes","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","ServiceService","data","__request","TreeService","AUTHORIZED_SERVICE_ENTITY_TYPE","AUTHORIZED_SERVICE_ROOT_ENTITY_TYPE","WORKSPACE_ALIAS","workspaceManifest","manifest","AuthorizedServicesTreeServerDataSource","UmbTreeServerDataSourceBase","host","getRootItems","getChildrenOf","getAncestorsOf","mapper","args","item","AuthorizedServicesTreeStore","UmbUniqueTreeStore","AUTHORIZED_SERVICES_TREE_STORE_CONTEXT","UmbContextToken","AuthorizedServicesTreeRepository","UmbTreeRepositoryBase","menuItem","manifests","AUTHORIZED_SERVICES_TREE_REPOSITORY_ALIAS","AUTHORIZED_SERVICES_TREE_STORE_ALIAS","AUTHORIZED_SERVICES_TREE_ALIAS","treeRepository","treeStore","tree","treeItem","menuManifests","onInit","_host","extensionRegistry","treeManifests","UMB_AUTH_CONTEXT","auth","umbOpenApi"],"mappings":"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"}