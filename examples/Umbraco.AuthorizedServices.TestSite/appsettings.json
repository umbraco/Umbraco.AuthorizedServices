{
  "$schema": "appsettings-schema.json",
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "System": "Warning"
      }
    }
  },
  "Umbraco": {
    "CMS": {
      "Global": {
        "Id": "21c492b7-f8bf-4c10-bf86-eff148d5bfa8",
        "SanitizeTinyMce": true
      },
      "Content": {
        "AllowEditInvariantFromNonDefault": true,
        "ContentVersionCleanupPolicy": {
          "EnableCleanup": true
        }
      },
      "Unattended": {
        "UpgradeUnattended": true
      },
      "Security": {
        "AllowConcurrentLogins": false
      }
    },
    "AuthorizedServices": {
      "TokenEncryptionKey": "",
      "Services": {
        "assetBank": {
          "DisplayName": "Asset Bank",
          "ApiHost": "https://my-assets-test.assetbank-server.com",
          "IdentityHost": "https://my-assets-test.assetbank-server.com",
          "TokenHost": "https://my-assets-test.assetbank-server.com",
          "RequestIdentityPath": "/assetbank-my-assets-test/oauth/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/assetbank-my-assets-test/oauth/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "JsonSerializer": "SystemTextJson",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/assetbank-my-assets-test/rest/asset-search?assetIds=1234"
        },
        "github": {
          "DisplayName": "GitHub",
          "ApiHost": "https://api.github.com",
          "IdentityHost": "https://github.com",
          "TokenHost": "https://github.com",
          "RequestIdentityPath": "/login/oauth/authorize",
          "RequestTokenPath": "/login/oauth/access_token",
          "RequestTokenFormat": "Querystring",
          "ClientId": "ab63677e5bcaedf34c49",
          "ClientSecret": "546f5a3b9517ae8d11d2b6e3f79a1baf766230a4",
          "Scopes": "repo",
          "SampleRequest": "/repos/Umbraco/Umbraco-CMS/contributors"
        },
        "hubspot": {
          "DisplayName": "HubSpot",
          "ApiHost": "https://api.hubapi.com",
          "IdentityHost": "https://app-eu1.hubspot.com",
          "TokenHost": "https://api.hubapi.com",
          "RequestIdentityPath": "/oauth/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/oauth/v1/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "JsonSerializer": "SystemTextJson",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "oauth forms crm.objects.contacts.read crm.objects.contacts.write",
          "SampleRequest": "/crm/v3/objects/contacts?limit=10&archived=false"
        },
        "semrush": {
          "DisplayName": "Semrush",
          "ApiHost": "https://oauth.semrush.com",
          "IdentityHost": "https://oauth.semrush.com",
          "TokenHost": "https://oauth.semrush.com",
          "RequestIdentityPath": "/auth/login",
          "RequestTokenPath": "/oauth2/access_token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "user.id,domains.info,url.info,positiontracking.info",
          "SampleRequest": ""
        },
        "shopify": {
          "DisplayName": "Shopify",
          "ApiHost": "https://[shop-name].myshopify.com",
          "IdentityHost": "https://[shop-name].myshopify.com",
          "TokenHost": "https://[shop-name].myshopify.com/admin",
          "RequestIdentityPath": "/admin/oauth/authorize",
          "RequestTokenPath": "/oauth/access_token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "read_products",
          "SampleRequest": "/admin/api/2022-01/products.json"
        },
        "dynamics": {
          "DisplayName": "Dynamics",
          "ApiHost": "https://[instance].crm4.dynamics.com/api/data/v9.2",
          "IdentityHost": "https://login.microsoftonline.com",
          "TokenHost": "https://login.microsoftonline.com",
          "RequestIdentityPath": "/common/oauth2/v2.0/authorize",
          "RequestTokenPath": "/common/oauth2/v2.0/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "https://[instance].crm4.dynamics.com/.default",
          "SampleRequest": "/msdyncrm_marketingforms"
        },
        "google": {
          "DisplayName": "Google Search Console",
          "ApiHost": "https://searchconsole.googleapis.com",
          "IdentityHost": "https://accounts.google.com",
          "TokenHost": "https://oauth2.googleapis.com",
          "RequestIdentityPath": "/o/oauth2/auth",
          "RequestTokenPath": "/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "https://www.googleapis.com/auth/webmasters https://www.googleapis.com/auth/webmasters.readonly",
          "SampleRequest": "/v1/urlInspection/index:inspect"
        },
        "aprimo": {
          "DisplayName": "Aprimo",
          "ApiHost": "https://[tenant].dam.aprimo.com/api/core",
          "IdentityHost": "https://[tenant].aprimo.com",
          "TokenHost": "https://[tenant].aprimo.com",
          "RequestIdentityPath": "/login/connect/authorize",
          "RequestTokenPath": "/login/connect/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "api offline_access",
          "SampleRequest": ""
        },
        "linkedin": {
          "DisplayName": "LinkedIn",
          "ApiHost": "https://api.linkedin.com",
          "IdentityHost": "https://www.linkedin.com",
          "TokenHost": "https://www.linkedin.com",
          "RequestIdentityPath": "/oauth/v2/authorization",
          "RequestTokenPath": "/oauth/v2/accessToken",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "r_emailaddress r_liteprofile w_member_social",
          "SampleRequest": "/v2/me"
        },
        "twitter_oauth2": {
          "DisplayName": "Twitter OAuth2",
          "ApiHost": "https://api.twitter.com",
          "IdentityHost": "https://twitter.com",
          "TokenHost": "https://api.twitter.com",
          "RequestIdentityPath": "/i/oauth2/authorize",
          "RequestTokenPath": "/2/oauth2/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "offline.access tweet.read users.read",
          "SampleRequest": "/2/users/me"
        },
        "twitter": {
          "DisplayName": "Twitter",
          "AuthenticationMethod": "OAuth1",
          "ApiHost": "https://api.twitter.com",
          "IdentityHost": "https://api.twitter.com",
          "TokenHost": "https://api.twitter.com",
          "RequestIdentityPath": "/oauth/authorize",
          "RequestTokenPath": "/oauth/access_token",
          "RequestTokenFormat": "FormUrlEncoded",
          "RequestAuthorizationPath": "/oauth/request_token",
          "AuthorizationUrlRequiresRedirectUrl": false,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/1.1/account/settings.json"
        },
        "flickr": {
          "DisplayName": "Flickr",
          "AuthenticationMethod": "OAuth1",
          "ApiHost": "https://www.flickr.com/services",
          "IdentityHost": "https://www.flickr.com/services",
          "TokenHost": "https://www.flickr.com/services",
          "RequestAuthorizationPath": "/oauth/request_token",
          "RequestIdentityPath": "/oauth/authorize",
          "RequestTokenPath": "/oauth/access_token",
          "RequestTokenFormat": "Querystring",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/rest?nojsoncallback=1&format=json&method=flickr.test.login"
        },
        "facebook": {
          "DisplayName": "Facebook",
          "ApiHost": "https://graph.facebook.com",
          "IdentityHost": "https://www.facebook.com",
          "TokenHost": "https://graph.facebook.com",
          "RequestIdentityPath": "/v3.0/dialog/oauth",
          "RequestTokenPath": "/v3.0/oauth/access_token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "email public_profile",
          "SampleRequest": "/v3.0/me"
        },
        "zoom": {
          "DisplayName": "Zoom",
          "ApiHost": "https://api.zoom.us",
          "IdentityHost": "https://zoom.us",
          "TokenHost": "https://zoom.us",
          "RequestIdentityPath": "/oauth/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": true,
          "RequestTokenPath": "/oauth/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "JsonSerializer": "SystemTextJson",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/v2/users/me"
        },
        "yahoo": {
          "DisplayName": "Yahoo",
          "ApiHost": "https://api.login.yahoo.com",
          "IdentityHost": "https://api.login.yahoo.com",
          "TokenHost": "https://api.login.yahoo.com",
          "RequestIdentityPath": "/oauth2/request_auth",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": false,
          "RequestTokenPath": "/oauth2/get_token",
          "RequestTokenFormat": "FormUrlEncoded",
          "JsonSerializer": "SystemTextJson",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/openid/v1/userinfo"
        },
        "mailchimp": {
          "DisplayName": "Mailchimp",
          "ApiHost": "https://login.mailchimp.com",
          "IdentityHost": "https://login.mailchimp.com",
          "TokenHost": "https://login.mailchimp.com",
          "RequestIdentityPath": "/oauth2/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": false,
          "RequestTokenPath": "/oauth2/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "JsonSerializer": "SystemTextJson",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/oauth2/metadata"
        },
        "discord": {
          "DisplayName": "Discord",
          "ApiHost": "https://discord.com",
          "IdentityHost": "https://discord.com",
          "TokenHost": "https://discord.com",
          "RequestIdentityPath": "/oauth2/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": false,
          "RequestTokenPath": "/api/oauth2/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "JsonSerializer": "SystemTextJson",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "email",
          "SampleRequest": "/users/@me"
        },
        "slack": {
          "DisplayName": "Slack",
          "ApiHost": "https://slack.com",
          "IdentityHost": "https://slack.com",
          "TokenHost": "https://slack.com",
          "RequestIdentityPath": "/oauth/v2/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": false,
          "RequestTokenPath": "/api/oauth.v2.access",
          "RequestTokenFormat": "FormUrlEncoded",
          "JsonSerializer": "SystemTextJson",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "users:read.email users:read channels:read groups:read mpim:read im:read",
          "SampleRequest": "/api/conversations.list?limit=50"
        },
        "dropbox": {
          "DisplayName": "Dropbox",
          "ApiHost": "https://api.dropboxapi.com",
          "IdentityHost": "https://www.dropbox.com",
          "TokenHost": "https://www.dropbox.com",
          "RequestIdentityPath": "/oauth2/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": true,
          "RequestTokenPath": "/oauth2/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "profile openid email account_info.read files.content.read files.metadata.read",
          "SampleRequest": ""
        },
        "fitbit": {
          "DisplayName": "Fitbit",
          "ApiHost": "https://api.fitbit.com",
          "IdentityHost": "https://www.fitbit.com",
          "TokenHost": "https://api.fitbit.com",
          "RequestIdentityPath": "/oauth2/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": true,
          "RequestTokenPath": "/oauth2/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationRequestRequiresAuthorizationHeaderWithBasicToken": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "profile",
          "SampleRequest": "/1/user/-/profile.json"
        },
        "figma": {
          "DisplayName": "Figma",
          "ApiHost": "https://api.figma.com",
          "IdentityHost": "https://www.figma.com",
          "TokenHost": "https://www.figma.com",
          "RequestIdentityPath": "/oauth",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/api/oauth/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "file_read",
          "SampleRequest": "/v1/me"
        },
        "miro": {
          "DisplayName": "Miro",
          "ApiHost": "https://api.miro.com",
          "IdentityHost": "https://miro.com",
          "TokenHost": "https://api.miro.com",
          "RequestIdentityPath": "/oauth/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/v1/oauth/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "boards:read",
          "SampleRequest": "/v2/boards?sort=default"
        },
        "calendly": {
          "DisplayName": "Calendly",
          "ApiHost": "https://api.calendly.com",
          "IdentityHost": "https://auth.calendly.com",
          "TokenHost": "https://auth.calendly.com",
          "RequestIdentityPath": "/oauth/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/oauth/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/users/me"
        },
        "zendesk": {
          "DisplayName": "Zendesk",
          "ApiHost": "https://api.getbase.com",
          "IdentityHost": "https://api.getbase.com",
          "TokenHost": "https://api.getbase.com",
          "RequestIdentityPath": "/oauth2/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/oauth2/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "read",
          "SampleRequest": "/v2/contacts"
        },
        "gitlab": {
          "DisplayName": "Gitlab",
          "ApiHost": "https://gitlab.com",
          "IdentityHost": "https://gitlab.com",
          "TokenHost": "https://gitlab.com",
          "RequestIdentityPath": "/oauth/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": true,
          "RequestTokenPath": "/oauth/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "api read_api read_user",
          "SampleRequest": "/api/v4/projects"
        },
        "atlasian": {
          "DisplayName": "Atlasian",
          "ApiHost": "https://api.atlassian.com",
          "IdentityHost": "https://auth.atlassian.com",
          "TokenHost": "https://auth.atlassian.com",
          "RequestIdentityPath": "/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": true,
          "RequestTokenPath": "/oauth/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "read:jira-user read:jira-work",
          "SampleRequest": "/oauth/token/accessible-resources"
        },
        "amazon": {
          "DisplayName": "Amazon",
          "ApiHost": "https://api.amazon.com",
          "IdentityHost": "https://www.amazon.com",
          "TokenHost": "https://api.amazon.com",
          "RequestIdentityPath": "/ap/oa",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "UseProofKeyForCodeExchange": true,
          "RequestTokenPath": "/auth/o2/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "profile",
          "SampleRequest": "/user/profile"
        },
        "bitbucket": {
          "DisplayName": "Bitbucket",
          "ApiHost": "https://api.bitbucket.org",
          "IdentityHost": "https://bitbucket.org",
          "TokenHost": "https://bitbucket.org",
          "RequestIdentityPath": "/site/oauth2/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/site/oauth2/access_token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/user/profile"
        },
        "timely": {
          "DisplayName": "Timely",
          "ApiHost": "https://api.timelyapp.com/1.1",
          "IdentityHost": "https://api.timelyapp.com/1.1",
          "TokenHost": "https://api.timelyapp.com/1.1",
          "RequestIdentityPath": "/oauth/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/oauth/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/1.1/accounts"
        },
        "youtube": {
          "DisplayName": "YouTube",
          "AuthenticationMethod": "ApiKey",
          "ApiHost": "https://www.googleapis.com/youtube",
          "IdentityHost": "",
          "TokenHost": "",
          "RequestIdentityPath": "",
          "RequestTokenPath": "",
          "RequestTokenFormat": "",
          "ApiKey": "",
          "ApiKeyProvision": {
            "Method": "QueryString",
            "Key": "key"
          },
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/v3/videos?id=1&part=snippet,contentDetails,statistics,status"
        },
        "salesforce": {
          "DisplayName": "Salesforce",
          "AuthenticationMethod": "OAuth2ClientCredentials",
          "ClientCredentialsProvision": "AuthHeader",
          "ApiHost": "https://[sf-instance].my.salesforce.com",
          "IdentityHost": "https://[sf-instance].my.salesforce.com",
          "TokenHost": "https://[sf-instance].my.salesforce.com",
          "RequestIdentityPath": "",
          "RequestTokenPath": "/services/oauth2/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "",
          "SampleRequest": "/services/data/v59.0/sobjects"
        },
        "microsoft": {
          "DisplayName": "Microsoft",
          "AuthenticationMethod": "OAuth2ClientCredentials",
          "ClientCredentialsProvision": "RequestBody",
          "ApiHost": "https://graph.microsoft.com",
          "IdentityHost": "https://login.microsoftonline.com",
          "TokenHost": "https://login.microsoftonline.com",
          "RequestIdentityPath": "",
          "RequestTokenPath": "/[tenant-id]/oauth2/v2.0/token",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "https://graph.microsoft.com/.default",
          "IncludeScopesInAuthorizationRequest": true,
          "SampleRequest": "/me"
        },
        "instagram": {
          "DisplayName": "Instagram",
          "ApiHost": "https://graph.instagram.com",
          "IdentityHost": "https://api.instagram.com",
          "TokenHost": "https://api.instagram.com",
          "RequestIdentityPath": "/oauth/authorize",
          "RequestTokenPath": "/oauth/access_token",
          "RequestTokenFormat": "FormUrlEncoded",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "ClientId": "",
          "ClientSecret": "",
          "Scopes": "user_profile",
          "SampleRequest": "/v3.0/me",
          "CanExchangeToken": true,
          "ExchangeTokenProvision": {
            "TokenHost": "https://graph.instagram.com",
            "RequestTokenPath": "/access_token",
            "TokenGrantType": "ig_exchange_token",
            "RequestRefreshTokenPath": "/refresh_access_token",
            "RefreshTokenGrantType": "ig_refresh_token",
            "ExchangeTokenWhenExpiresWithin": "25.00:00:00"
          },
          "RefreshAccessTokenWhenExpiresWithin": "00.00:00:40"
        },
        "meetup": {
          "DisplayName": "Meetup",
          "ApiHost": "https://api.meetup.com",
          "IdentityHost": "https://secure.meetup.com",
          "TokenHost": "https://secure.meetup.com",
          "RequestIdentityPath": "/oauth2/authorize",
          "AuthorizationUrlRequiresRedirectUrl": true,
          "RequestTokenPath": "/oauth2/access",
          "RequestTokenFormat": "FormUrlEncoded",
          "ClientId": "",
          "ClientSecret": "",
          "SampleRequest": "/gql"
        }
      }
    }
  },
  "ConnectionStrings": {
    "umbracoDbDSN": "Data Source=|DataDirectory|/Umbraco.sqlite.db;Cache=Shared;Foreign Keys=True;Pooling=True",
    "umbracoDbDSN_ProviderName": "Microsoft.Data.Sqlite"
  }
}
